replace=T)
proportion = sum(sample)/n
return(proportion)
}
#run it 1000 times for 100 coins
df = map(1:100,
function(x)
rerun(1000,proportion(x)))
## generate the plots
generate_plot = function(n){
set=data.frame(df[[n]]) %>%
gather(key=x,
value=outcome) %>%
mutate(x=c(1:1000))
graph = ggplot(set,
aes(outcome,
y=..density..))+
geom_histogram(bins=30)+
scale_x_discrete(limits=c(0,1))+
scale_y_continuous(limits=c(0,15))+
labs(list(title = str_c("The", x, "coins"),
x = "prop",
y = "frequency"))
ggsave(graph,file=str_c("plot",str_pad(n, width=3, pad="0", side= "left"), ".png" ,sep=""),
path="~/Desktop/Stats R/githubrepos-jennyjiang95/hw8/plots",
device="png")
}
# create and save 100 plots
c(1:100) %>%
map(generate_plot)
# produce gif
file_names = str_c("plot", str_pad(c(1:100), width=3,pad="0", side="left"),".png",sep="")
im.convert(file_names,output= "test.gif")
# ANOTHER WAY
system("convert -delay 5 -loop 0 *.png proportion.gif")
map_arrested1
knitr::opts_chunk$set(echo = TRUE)
library(sp)
library(ggmap)
library(tidyr)
library(readr)
library(plyr)
library(dplyr)
library(ggvis)
library(tidyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(readr)
library(data.table)
library(maps)
library(mapdata)
library(maptools)
library(scales)
library(RgoogleMaps)
library(rgdal)
library(rgeos)
library(RColorBrewer)
library(grid)
library(gridExtra)
library(pander)
library(formattable)
library(pander)
library(extrafont)
setwd("~/Desktop/Stats R/PROJECT/FINALPAPER/finalproject_angry_ladies/final_paper")
# read in the data and define parameters:
############################ read in the data ###########################
############################ Police Stop Data ###########################
stops <- read_csv("../clean_data/StopData_clean.csv")
stops$Gender<- stops$Gender %>%
str_replace("F", "Female") %>%
str_replace("M", "Male")
stops$AgeRange<- stops$AgeRange %>%
str_replace("1", "0-18") %>%
str_replace("2", "18-29") %>%
str_replace("3", "30-39") %>%
str_replace("4", "40+")
########################### arrest data ###########################
arrest <- read_csv("../raw_data/Berkeley_PD_Log_-_Arrests.csv")
arrest$Age <- as.integer(arrest$Age)
arrest$Age[arrest$Age<18] <- "0-18"
arrest$Age[arrest$Age>=18 & arrest$Age<30] <- "18-29"
arrest$Age[arrest$Age>=30 & arrest$Age<40] <- "30-39"
arrest$Age[arrest$Age>=40] <- "40+"
arrest$Age <- as.factor(arrest$Age)
############################ jail data ###########################
jail <- read.csv("../raw_data/Berkeley_PD_Log_-_Jail_Bookings.csv")
jail$Age <- as.integer(jail$Age)
jail$Age[jail$Age<20] <- "0-19"
jail$Age[jail$Age>=20 & jail$Age<30] <- "20-29"
jail$Age[jail$Age>=30 & jail$Age<40] <- "30-39"
jail$Age[jail$Age>=40] <- "40+"
jail$Age <- as.factor(jail$Age)
############################ Census 2010 Data by Polygonal Tract Number ###########################
berkcensus2010 <- read_csv("../clean_data/census2010tractpop_clean.csv")
census <- read.csv("../raw_data/Census_Data_2000_And_2010.csv")
census2010 <- census[census$Year==2010,]
totalpop <- census2010[1,]$Amount
racecensus2010 <- census2010[census2010$Heading=="Not Hispanic or Latino"|census2010$Heading=="HISPANIC OR LATINO AND RACE",]
sexcensus2010 <- census2010[census2010$Heading=="Sex",]
agecensus2010 <- census2010[census2010$Heading=="Age",]
race <- select(racecensus2010, Description, Amount)
race$Description <- race$Description %>%
str_replace_all("Hispanic or Latino.*", "Hispanic") %>%
str_replace("Black or African American", "Black") %>%
str_replace("American Indian and Alaska Native", "Other") %>%
str_replace("Native Hawaiian and Other Pacific Islander", "Other") %>%
str_replace("Some other race", "Other") %>%
str_replace("Two or more races", "Other")
race <- race[race$Description !="Not Hispanic",]
race <- race %>%
group_by(Description) %>%
tally(Amount)
names(race) <- c("Description", "Counts")
sex <- select(sexcensus2010, Description, Amount)
age <- select(agecensus2010, Description, Amount)
age <- age[age$Description != "Median age",]
age$Description <- c("0-18", "0-18", "18-64", "65+")
age<- age %>%
group_by(Description) %>%
tally(Amount)
names(age) <- c("Description", "Counts")
################## Census 2010 Data by Polygonal Tract Number, ready for mapping #################
berkcensus2010map <- readRDS("../clean_data/berk_census2010_mapdata.rds")
############################ Police Calls for service ############################
callservice <- readRDS("../clean_data/CallsForService.rds")
callservice<- callservice %>%
mutate(latlong=
str_replace_all(callservice$Block_Location,"[0-9]* [A-Za-z]*", "") %>%
str_replace_all("\nBerkeley,\n", "") %>%
str_replace("[A-Za-z]*", "") %>%
str_replace(";","") %>%
str_replace("&","") %>%
str_replace("[A-Za-z]*", ""))
callservice$latlong<- str_replace(callservice$latlong, "\\(", "") %>%
str_replace("\\)", "")
callservice<- callservice %>%
separate(latlong, c("lat", "long"), sep=",")
callservice$lat <- as.numeric(callservice$lat)
callservice$long <- as.numeric(callservice$long)
#############################  Tables to use in paper ############################
tables <- readRDS("../clean_data/Tables_AgeSexRacePopStop.rds")
ss <- as.data.frame(tables[5]) # stop data by race proportional to population
pop1 <- as.data.frame(tables[4]) # census data population count table.
race <- as.data.frame(tables[3]) # race population count
sex <- as.data.frame(tables[2]) # sex population count
age <- as.data.frame(tables[1]) # age population count
dataframelist <- readRDS("../clean_Data/StopData_tbls.rds")
table1 <- data.frame(dataframelist[1])
table2 <- data.frame(dataframelist[2])
table3 <- data.frame(dataframelist[3])
## Location info:
latmax <- max(stops$lat, na.rm = TRUE)
latmin <- min(stops$lat, na.rm = TRUE)
lonmax <- max(stops$long, na.rm = TRUE)
lonmin <- min(stops$long, na.rm = TRUE)
latvals <- c(latmin, latmax)
lonvals <- c(lonmin, lonmax)
# get rid of the axes theme:
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank()
)
# get the plain Berkeley map from Google:
# zoomed out berkeley map:
berkMap = map = get_map(location = c(lon = mean(lonvals),
lat = mean(latvals)),
zoom = 12)
berkgg_zoom1 <-ggmap(berkMap) +
xlim(-122.335, lonmax) +
ylim(latvals) +
ditch_the_axes
# zoomed in berkeley map:
berkMap2 = map = get_map(location = c(lon = mean(lonvals),
lat = mean(latvals)),
zoom = 14)
berkgg_zoom2 <-ggmap(berkMap2) +
ditch_the_axes
########### CENSUS DATA MAPS: ########
###############################  create color palette ##############################
p <- colorRampPalette(c("white", "red"))(128)
palette(p)
############################## multiplot function ##############################
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
############################ create the maps ###########################
m <- stops %>%
group_by(Race) %>%
tally()
names(m) <- c("Race", "stop")
names(race) <- c("Race", "census")
pop1 <- left_join(race,m,by = "Race")
pop1 <- pop1 %>%
mutate(percentage=(stop/census))
pop1$percentage<- round(pop1$percentage, digits = 2)
pop1 <- pop1 %>%
mutate(totalp = (census/totalpop))
pop1$totalp <- round(pop1$totalp, digits =2)
p1 <- ggplot(pop1)+
geom_bar(aes(x=Race,
y=percentage),
stat = "identity",
fill = c("#FFCC00","#E1B378","#5F9EA0","#66FFCC","#40B8D0"))+
geom_text(aes(x=Race,
y=percentage,
label = paste0(percentage*100,"%")),
size=5,
colour= "#000000")+
scale_y_continuous(labels=percent, limits = c(0,1)) +
labs(title = "The Percentage of Being \nStopped by Police (%)",
x = "Race",
y = "Percentage") +
theme(axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank()) +
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
p2 <- ggplot(pop1)+
geom_bar(aes(x=Race,
y=totalp),
stat = "identity",
fill = c("#FFCC00","#E1B378","#5F9EA0","#66FFCC","#40B8D0"))+
geom_text(aes(x=Race,
y=totalp,
label = paste0(totalp*100,"%")),
size=5,
colour= "#000000")+
scale_y_continuous(labels=percent, limits = c(0,1)) +
labs(title = "The Percentage of Berkeley \nCensus Data 2010 (%)",
x = "Race",
y = "Percentage") +
theme(axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank()) +
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
# stop data map
map_stop1 <- berkgg_zoom2 +
geom_point(data = stops, aes(x=long,y=lat), alpha = .2) +
ggtitle("Berkeley Police Stops, 2015-2016")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
# calls for service
map_callservice1 <- berkgg_zoom2 +
geom_point(data = na.omit(callservice), aes(x=long,y=lat), alpha = .2) +
ggtitle("Calls for Service (not criminal reports) \nWithin 180 days (Feb-July 2016)")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
############################ populatrion density map ###########################
popdenmap <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map, aes(x = long, y = lat, group = group, fill = Percent.Berkeley), color = "white", alpha = .7) +
ggtitle("2010 Population Density") +
labs(fill = "Percent") +
scale_fill_gradientn(colors = p) +
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
# black population:
black2 <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map,
aes(x = long,
y = lat,
group = group,
fill = Percent.Black),
color = "white",
alpha = .7) +
scale_fill_gradientn(colors = p,
limits = c(0,1)) +
guides(fill = "none") +
ggtitle("% Black")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
# White population:
w2 <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map,
aes(x = long,
y = lat,
group = group,
fill = Percent.White),
color = "white",
alpha = .7) +
scale_fill_gradientn(colors = p,
limits = c(0,1)) +
guides(fill = "none") +
ggtitle("% White")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
# Asian population:
a2 <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map,
aes(x = long,
y = lat,
group = group,
fill = Percent.Asian),
color = "white",
alpha = .7) +
scale_fill_gradientn(colors = p,
limits = c(0,1)) +
guides(fill = "none") +
ggtitle("% Asian")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
# Hispanic population:
h2 <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map,
aes(x = long,
y = lat,
group = group,
fill = Percent.Hispanic),
color = "white",
alpha = .7) +
scale_fill_gradientn(colors = p,
limits = c(0,1)) +
guides(fill = "none") +
ggtitle("% Hispanic")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
# Other population:
o2 <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map,
aes(x = long,
y = lat,
group = group,
fill = Percent.Other),
color = "white",
alpha = .7) +
scale_fill_gradientn(colors = p,
limits = c(0,1)) +
guides(fill = "none") +
ggtitle("% Other")+
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
# bar graphs based on stop data:
names(ss)[2:3] <- c("Percent_Stopped", "Percent_Population_Stopped")
per <- ss %>%
mutate(Percent_Stopped= str_replace(Percent_Stopped, "%", "")) %>%
mutate(Percent_Population_Stopped=str_replace(Percent_Population_Stopped, "%", ""))
per$Percent_Stopped <- as.numeric(per$Percent_Stopped)
per$Percent_Stopped <- per$Percent_Stopped/100
per$Percent_Population_Stopped <- as.numeric(per$Percent_Population_Stopped)
per$Percent_Population_Stopped <- per$Percent_Population_Stopped/100
bargraph1 <- ggplot(per,
aes(x=Race,
y=Percent_Stopped,
fill = Race))+
geom_bar(stat = "identity",
fill = c("#FFCC00","#E1B378","#5F9EA0","#66FFCC","#40B8D0")) +
geom_text(aes(x=Race,
y=Percent_Stopped,
label = paste0(Percent_Stopped*100, "%")),
size=5,
colour= "#000000") +
scale_y_continuous(labels=percent, limits = c(0,1)) +
labs(title = "Percent Stopped",
x = "Race",
y = "Percent stopped")+
theme(axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank())+
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
bargraph2 <- ggplot(per,
aes(x=Race,
y=Percent_Population_Stopped,
fill = Race))+
geom_bar(stat = "identity",
fill = c("#FFCC00","#E1B378","#5F9EA0","#66FFCC","#40B8D0"))+
geom_text(aes(x=Race,
y=Percent_Population_Stopped,
label = paste0(Percent_Population_Stopped*100, "%")),
size=5,
colour= "#000000") +
scale_y_continuous(labels=percent, limits = c(0,1)) +
labs(title = "Percent Population Stopped",
x = "Race",
y = "Percent stopped")+
theme(axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_line(colour = "#d3d3d3"), panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank())+
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
# STOP DENSITY MAP:
stopdensitymap <- berkgg_zoom2 +
stat_density2d(aes(x = long, y = lat, fill= ..level.., alpha = .2* ..level..),
size = 2, bins = 5, data = stops, geom = "polygon") +
scale_fill_gradient(low = "black", high = "red") +
theme (panel.grid.major = element_blank (), # remove major grid
panel.grid.minor = element_blank ()  # remove minor grid
)+
ggtitle("All BPD Stops Density, 2015-2016") +
labs(alpha = element_blank()) +
guides(alpha = FALSE)
# stop density
stopdensitymap4 <- berkgg_zoom2 +
stat_density2d(aes(x = long,
y = lat,
fill = ..level..,
alpha = ..level..),
bins = I(5), geom = "polygon", data = stops ) +
scale_fill_gradient2( "StopDensity",
low = "white", mid = "orange", high = "red", midpoint = 100) +
labs(x = "Longitude", y = "Latitude") +
scale_alpha(range = c(.2, .55), guide = FALSE) +
ggtitle("Berkeley Police Stop \nDensity Map, 2015-2016")+
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
############################ populatrion density map ###########################
popdenmap <- berkgg_zoom1 +
geom_polygon(data = berkcensus2010map, aes(x = long, y = lat, group = group, fill = Percent.Berkeley), color = "white", alpha = .7) +
ggtitle("2010 Population Density") +
labs(fill = "Percent") +
scale_fill_gradientn(colors = p) +
theme(plot.title = element_text(size = 12, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 10),
axis.text.x=element_text(colour="black", size = 7),
axis.text.y=element_text(colour="black", size = 7))
# stop density by race
stopdensitymap3 <- berkgg_zoom2 +
stat_density2d(aes(x = long,
y = lat,
fill = ..level..,
alpha = ..level..),
bins = I(5), geom = "polygon", data = stops) +
scale_fill_gradient2("StopDensity",
low = "white", mid = "orange", high = "red", midpoint = 100) +
labs(x = "Longitude", y = "Latitude") + facet_grid( ~ Race) +
scale_alpha(range = c(.2, .55), guide = FALSE) +
ggtitle("Berkeley Police Stop Density Map by Race") +
guides(fill = guide_colorbar(barwidth = 1.5, barheight = 10)) +
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 14),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10)) +
guides(fill = FALSE)
# stops leading to arrests by race:
df <- subset(stops, as.character(Enforcement) == "Arrest")
map_arrested1 <- berkgg_zoom1 +
geom_point(aes(x = long,
y = lat,
colour = Race),
data = df,
alpha = 0.7) +
scale_color_manual(values=c("#FFCC00","#E1B378","#5F9EA0","#66FFCC","#40B8D0"))+
theme (
panel.grid.major = element_blank (), # remove major grid
panel.grid.minor = element_blank (),  # remove minor grid
axis.text = element_blank (),
axis.title = element_blank (),
axis.ticks = element_blank ()) +
ggtitle("Police Stops Leading to Arrests") +
facet_grid(~ Race) +
guides(colour = FALSE) +
theme(plot.title = element_text(size = 14, family = "Georgia", face = "bold"),
text=element_text(family="Times New Roman", size = 14),
axis.text.x=element_text(colour="black", size = 10),
axis.text.y=element_text(colour="black", size = 10))
fonts()
