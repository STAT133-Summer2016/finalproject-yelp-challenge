stop_df <-stop_df %>%
mutate(Location=paste0(Location, ", Berkeley")) %>%
mutate(Location=as.character(Location)) %>%
mutate(Incident.Number=as.character(Incident.Number)) %>%
mutate(Call.Date.Time=as.character(Call.Date.Time)) %>%
mutate(Dispositions=as.character(Dispositions))
c<-str_replace_all(stop_df$Location, "/"," and ")
stop_df <- stop_df %>%
mutate(Location = c) %>%
mutate(index=as.numeric(rownames(stop_df)))
is.character(data$Location)
is.character(stop_df$Location)
c<-mdy_hms(stop_df$Call.Date.Time)
stop_df<-stop_df %>%
mutate(Call.Date.Time=c)
is.POSIXct(data$Call.Date.Time)
is.POSIXct(stop_df$Call.Date.Time)
stop_df<-stop_df%>%
mutate(Year=year(Call.Date.Time)) %>%
mutate(Date=date(Call.Date.Time)) %>%
mutate(DayOfWeek=weekdays(Call.Date.Time))
# look at the first few addresses in stop_df
address<-head(stop_df$Location,number_of_rows_to_do)
#define a function that will process googles server responses for us.
getGeoDetails <- function(address){
#use the gecode function to query google servers
geo_reply = geocode(address, output='all', messaging=TRUE, override_limit=TRUE)
#now extract the bits that we need from the returned list
answer <- data.frame(lat=NA, long=NA, accuracy=NA, formatted_address=NA, address_type=NA, status=NA)
answer$status <- geo_reply$status
#if we are over the query limit - want to pause for an hour
while(geo_reply$status == "OVER_QUERY_LIMIT"){
print("OVER QUERY LIMIT - Pausing for 1 hour at:")
time <- Sys.time()
print(as.character(time))
Sys.sleep(60*60)
geo_reply = geocode(address, output='all', messaging=TRUE, override_limit=TRUE)
answer$status <- geo_reply$status
}
#return Na's if we didn't get a match:
if (geo_reply$status != "OK"){
return(answer)
}
#else, extract what we need from the Google server reply into a dataframe:
answer$lat <- geo_reply$results[[1]]$geometry$location$lat
answer$long <- geo_reply$results[[1]]$geometry$location$lng
if (length(geo_reply$results[[1]]$types) > 0){
answer$accuracy <- geo_reply$results[[1]]$types[[1]]
}
answer$address_type <- paste(geo_reply$results[[1]]$types, collapse=',')
answer$formatted_address <- geo_reply$results[[1]]$formatted_address
return(answer)
}
#initialise a dataframe to hold the results
geocoded <- data.frame()
# find out where to start in the address list (if the script was interrupted before):
startindex <- 1
#if a temp file exists - load it up and count the rows!
tempfilename <- paste0(infile, '_temp_geocoded.rds')
if (file.exists(tempfilename)){
print("Found temp file - resuming from index:")
geocoded <- readRDS(tempfilename)
startindex <- nrow(geocoded)+1
print(startindex)
}
# Start the geocoding process - address by address. geocode() function takes care of query speed limit.
for (ii in seq(startindex, length(address))){
print(paste("Working on index", ii, "of", length(address)))
#query the google geocoder - this will pause here if we are over the limit.
result = getGeoDetails(address[ii])
print(result$status)
result$index <- ii
#append the answer to the results file.
geocoded <- rbind(geocoded, result)
#save temporary results as we are going along
saveRDS(geocoded, tempfilename)
}
#now we add the latitude and longitude to the main data
stop_df<-join(stop_df,geocoded,by="index")
stop_df60<-stop_df %>%
subset(index <=number_of_rows_to_do)
View(filter(stop_df, str_detect(stop_df$Other, "M")))
View(filter(stop_df, str_detect(stop_df$Other, "M")))
str_detect(stop_df$Other, "M")
setwd("/Users/Gabrielle/Documents/Master/stat133/finalproject_angry_ladies")
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
View(stop_df)
# Split people information and other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
View(filter(stop_df, str_detect(stop_df$Other, "M")))
OtherInformation <- c( "^M$", ", M$", "M, P$", "P[, ]{0,2}", "AR[, ]{0,2}", "IN[, ]{0,2}", "FC[, ]{0,2}", "CO[, ]{0,2}", "MH[, ]{0,2}", "TOW[, ]{0,2}", "0[, ]{0,2}", "00000[, ]{0,2}")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation, ""))
View(stop_df)
library(tidyr)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
#read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation))
View(stop_df)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split people information and other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation))
View(stop_df)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
stop_df[102, ]
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split people information and other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation))
View(stop_df)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split people information and other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
View(stop_df)
selectedData <- filter(stop_df, stop_df$Incident.Number == "2016-00019129")
selectedData
selectedData$Dispositions
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
selectedData <- filter(stop_df, stop_df$Incident.Number == "2016-00019129")
selectedData$Dispositions
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
View(stop_df)
selectedData <- filter(stop_df, stop_df$Incident.Number == "2016-00019129")
selectedData
View(filter(stop_df, str_count(stop_df$Dispositions, "[0-9A-Z]{6}") > 1))
help("group_by")
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Creating new entries for multiple people in one disposition
View(stop_df)
#mutate dispositions column to only contain six character cases
stop_df <- mutate(stop_df, Dispositions = str_match_all(stop_df$Dispositions, "[a-zA-Z0-9]{6}"))
dispositions <- separate(stop_df, Dispositions, into = c("Empty", "Individual_1", "Individual_2", "Individual_3", "Individual_4", "Individual_5"), extra = "merge", fill = "right")
stop_df <- separate(stop_df, Dispositions, into = c("Individual_1", "Individual_2", "Individual_3", "Individual_4", "Individual_5"), extra = "merge", fill = "right")
stop_df <- melt(stop_df, id = c("Incident.Number", "Call.Date.Time", "Location", "Incident.Type", "Other")) %>%
arrange(Incident.Number)
View(stop_df)
install.packages("reshape")
library(reshape)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
help("separate")
stop_df <- stop_df %>%
separate(stop_df, Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right")
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right")
View(stop_df)
#read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Creating new entries for multiple people in one disposition
View(stop_df)
#mutate dispositions column to only contain six character cases
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right") %>%
gather(key = Individual, value = Dispositions, 1, 2, 3, 4, 5)
#read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Creating new entries for multiple people in one disposition
View(stop_df)
#mutate dispositions column to only contain six character cases
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right")
#read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Creating new entries for multiple people in one disposition
#mutate dispositions column to only contain six character cases
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right") %>%
gather(key = Individual, value = Dispositions, 1:5)
View(stop_df)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
View(stop_df)
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
View(stop_df)
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right") %>%
gather(key = Individual, value = Dispositions, -Incident.Type, -Incident.Number, -Call.Date.Time, -Location, -Other)
View(stop_df)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split information about the individual from other information
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Creating new entries for multiple people in one disposition
#mutate dispositions column to only contain six character cases
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill =
"right") %>%
gather(key = Individual, value = Dispositions, -Incident.Type, -Incident.Number, -Call.Date.Time, -Location, -Other) %>%
na.omit() %>%
arrange(Incident.Number)
View(stop_df)
stop_df<- stop_df %>%
filter(nchar(Dispositions) == 6) %>%
mutate(Race = substr(Dispositions,1,1)) %>%
mutate(Gender = substr (Dispositions,2,2)) %>%
mutate(AgeRange = substr (Dispositions,3,3)) %>%
mutate(Reason =substr(Dispositions,4,4)) %>%
mutate(Enforcement = substr(Dispositions,5,5)) %>%
mutate(CarSearch = substr(Dispositions,6,6))
View(stop_df)
View(stop_df)
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split other information from information about the individual(s)
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
View(stop_df)
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill = "right") %>%
gather(key = Individual, value = Dispositions, -Incident.Number, -Incident.Type, -Call.Date.Time, -Other, -Location) %>%
na.omit() %>%
arrange(Incident.Number)
View(stop_df)
#read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix typos
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Split other information from information about the individual(s)
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Delete other information from Disposition
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Creating new entries for multiple people in one disposition
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill = "right") %>%
gather(key = Individual, value = Dispositions, -Incident.Number, -Incident.Type, -Call.Date.Time, -Other, -Location) %>%
na.omit() %>%
arrange(Incident.Number)
# Separate information about people
stop_df<- stop_df %>%
filter(nchar(Dispositions) == 6) %>%
mutate(Race = substr(Dispositions,1,1)) %>%
mutate(Gender = substr (Dispositions,2,2)) %>%
mutate(AgeRange = substr (Dispositions,3,3)) %>%
mutate(Reason =substr(Dispositions,4,4)) %>%
mutate(Enforcement = substr(Dispositions,5,5)) %>%
mutate(CarSearch = substr(Dispositions,6,6))
View(stop_df)
library(tidyr)
library(dplyr)
library(stringr)
#Read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix data entry errors
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Isolates information about the case into the Other column
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Isolates information about the individual(s) into the Dispositions column
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Arranges information in the Dispositions column into separate objects for each individual involved
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill = "right") %>%
gather(key = Individual, value = Dispositions, -Incident.Number, -Incident.Type, -Call.Date.Time, -Other, -Location) %>%
na.omit() %>%
arrange(Incident.Number)
# Separates information about the individual into 6 columns describing race, gender, age, reason, enforcement, and car search
stop_df <- stop_df %>%
filter(nchar(Dispositions) == 6) %>%
mutate(Race = substr(Dispositions,1,1)) %>%
mutate(Gender = substr (Dispositions,2,2)) %>%
mutate(AgeRange = substr (Dispositions,3,3)) %>%
mutate(Reason = substr(Dispositions,4,4)) %>%
mutate(Enforcement = substr(Dispositions,5,5)) %>%
mutate(CarSearch = substr(Dispositions,6,6))
View(stop_df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(stringr)
#Read data
stop_df <- read.csv("~/Desktop/Berkeley_PD_-_Stop_Data.csv")
# Delete meaningless information and fix data entry errors
stop_df <- stop_df %>%
mutate(Dispositions = as.character(stop_df$Dispositions)) %>%
mutate(Dispositions = str_replace(Dispositions, "zz do not use Assist", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "FA - TIGHT, ", "")) %>%
mutate(Dispositions = str_replace(Dispositions, "[0]{6}[1]?", "00000"))
# Isolates information about the case into the Other column
stop_df <- stop_df %>%
mutate(Other = str_replace_all(Dispositions, "[ ,]{0,2}[a-zA-Z0-9]{6}", "")) %>%
mutate(Other = str_replace_all(Other, "^[ ,]{0,4}", "")) %>%
mutate(Other = str_replace(Other, ",$", ""))
# Isolates information about the individual(s) into the Dispositions column
OtherInformation <- c( "^M$" = "", ", M$" = "", "M, P$" = "", "P[, ]{0,2}" = "", "AR[, ]{0,2}" = "", "IN[, ]{0,2}" = "", "FC[, ]{0,2}" = "", "CO[, ]{0,2}" = "", "MH[, ]{0,2}" = "", "TOW[, ]{0,2}" = "", "0[, ]{0,2}" = "", "00000[, ]{0,2}" = "")
stop_df <- stop_df %>%
mutate(Dispositions = str_replace_all(Dispositions, OtherInformation)) %>%
mutate(Dispositions = str_replace_all(Dispositions, "[, ]{0,2}$", ""))
# Arranges information in the Dispositions column into separate objects for each individual involved
stop_df <- stop_df %>%
separate(Dispositions, into = c("1", "2", "3", "4", "5"), extra = "merge", fill = "right") %>%
gather(key = Individual, value = Dispositions, -Incident.Number, -Incident.Type, -Call.Date.Time, -Other, -Location) %>%
na.omit() %>%
arrange(Incident.Number)
# Separates information about the individual into 6 columns describing race, gender, age, reason, enforcement, and car search
stop_df <- stop_df %>%
filter(nchar(Dispositions) == 6) %>%
mutate(Race = substr(Dispositions,1,1)) %>%
mutate(Gender = substr (Dispositions,2,2)) %>%
mutate(AgeRange = substr (Dispositions,3,3)) %>%
mutate(Reason = substr(Dispositions,4,4)) %>%
mutate(Enforcement = substr(Dispositions,5,5)) %>%
mutate(CarSearch = substr(Dispositions,6,6))
View(stop_df)
