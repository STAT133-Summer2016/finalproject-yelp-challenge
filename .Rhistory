stop_day <- stop_by %>%
ggvis(x = ~Day, fill = ~Race) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$Race)
stop_day
stop_by <- read_csv("cleaned_stop_data.csv")
stop_by$Call.Date.Time <- mdy_hm(stop_by$Call.Date.Time)
stop_by$AgeRange <- as.factor(stop_by$AgeRange)
stop_by <- stop_by %>%
mutate(Hour = as.integer(hour(Call.Date.Time))) %>%
mutate(Day = as.factor(as.integer(wday(Call.Date.Time))))
stop_day <- stop_by %>%
ggvis(x = ~Day, fill = ~Race) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$Race)
stop_day
stop_time <- stop_by %>%
ggvis(x = ~Hour, fill := "lightpink") %>%
layer_histograms(width = input_slider(1, 12, value = 1, step = 2, label = "width"))
stop_time
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = Reason)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage
stop_by_hourCount <- stop_by %>%
group_by(Hour) %>%
summarise(hourcount = n())
stop_by_ageRangeCount <- stop_by %>%
group_by(Hour, AgeRange) %>%
summarise(ageCount = n())
stop_by_percentage <- left_join(stop_by_ageRangeCount, stop_by_hourCount)
stop_by_percentage <- stop_by_percentage %>%
mutate(percentage = ageCount/hourcount)
stop_time_percentage2 <- ggplot(stop_by_percentage, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage2
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = Reason)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage
stop_by_hourCount <- stop_by %>%
group_by(Hour) %>%
summarise(hourcount = n())
stop_by_ageRangeCount <- stop_by %>%
group_by(Hour, AgeRange) %>%
summarise(ageCount = n())
stop_by_percentage <- left_join(stop_by_ageRangeCount, stop_by_hourCount)
stop_by_percentage <- stop_by_percentage %>%
mutate(percentage = ageCount/hourcount)
stop_time_percentage2 <- ggplot(stop_by_percentage, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage2
stop_by_hourCount <- stop_by %>%
group_by(Hour) %>%
summarise(hourcount = n())
stop_by_raceRangeCount <- stop_by %>%
group_by(Hour, Race) %>%
summarise(raceCount = n())
stop_by_percentage1 <- left_join(stop_by_raceRangeCount, stop_by_hourCount)
stop_by_percentage1 <- stop_by_percentage1 %>%
mutate(percentage = raceCount/hourcount)
stop_time_percentage3 <- ggplot(stop_by_percentage1, aes(x = Hour, fill = Race)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Race)
stop_time_percentage3
stop_by_reason_race <- stop_by %>%
group_by(Race, Reason) %>%
summarise(totalCount = n())
stop_by_arrest <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(Race, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_race <- left_join(stop_by_reason_race, stop_by_arrest)
stop_by_percentage_race <- stop_by_percentage_race %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest <- ggplot(stop_by_percentage_race, aes(x = Race, fill = Race)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest
stop_by_reason_age <- stop_by %>%
group_by(AgeRange, Reason) %>%
summarise(totalCount = n())
stop_by_arrest_age <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(AgeRange, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_age <- left_join(stop_by_reason_age, stop_by_arrest_age)
stop_by_percentage_age <- stop_by_percentage_age %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest_age <- ggplot(stop_by_percentage_age, aes(x = AgeRange, fill = AgeRange)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest_age
stop_by_reason_gender <- stop_by %>%
group_by(Gender, Reason) %>%
summarise(totalCount = n())
stop_by_arrest_gender <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(Gender, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_gender <- left_join(stop_by_reason_gender, stop_by_arrest_gender)
stop_by_percentage_gender <- stop_by_percentage_gender %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest_gender <- ggplot(stop_by_percentage_gender, aes(x = Gender, fill = Gender)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest_gender
stop_race <- ggplot(stop_by, aes(x = Reason, fill = Enforcement)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~Race)
stop_race
stop_race2 <- ggplot(stop_by, aes(x = Reason, fill = Enforcement)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
scale_fill_brewer(palette = "Set1") +
facet_grid(Race~Gender)
stop_race2
stop_race <- stop_by %>%
ggvis(x = ~Race , fill = ~AgeRange) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$AgeRange)
stop_race
stop_race_total_table <- stop_by %>%
group_by(Race) %>%
summarise(totaLCount = n())
stop_race_agerange_table <- stop_by %>%
group_by(Race, AgeRange) %>%
summarise(count = n())
stop_race_table <- left_join(stop_race_agerange_table, stop_race_total_table)
stop_race_total_table <- stop_by %>%
group_by(Race) %>%
summarise(totaLCount = n())
stop_race_agerange_table <- stop_by %>%
group_by(Race, AgeRange) %>%
summarise(count = n())
stop_race_table <- left_join(stop_race_agerange_table, stop_race_total_table, by = "Race")
View(stop_race_table)
library(tidyr)
stop_race_table <- stop_race_table %>%
spread(key = AgeRange, value = count)
View(stop_race_table)
stop_race_table
stop_race_total_table <- stop_by %>%
group_by(Race) %>%
summarise(totaLCount = n())
stop_race_agerange_table <- stop_by %>%
group_by(Race, AgeRange) %>%
summarise(count = n())
stop_race_table <- left_join(stop_race_agerange_table, stop_race_total_table, by = "Race")
View(stop_race_table)
stop_race_table <- stop_race_table %>%
mutate(percentage = count/totaLCount)
View(stop_race_table)
stop_race_table <- stop_race_table %>%
spread(key = AgeRange, value = count)
View(stop_race_table)
stop_race_table <- stop_race_table %>%
mutate(percentage = count/totaLCount) %>%
select(-count)
stop_race_table <- left_join(stop_race_agerange_table, stop_race_total_table, by = "Race")
stop_race_table <- stop_race_table %>%
mutate(percentage = count/totaLCount) %>%
select(-count)
stop_race_table <- stop_race_table %>%
spread(key = AgeRange, value = percentage)
stop_race_table
help(ggvis)
help(add_title)
??add_title
stop_race <- stop_by %>%
ggvis(x = ~Race , fill = ~AgeRange) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$AgeRange) %>%
add_axis(label = "plot")
stop_race
stop_race <- stop_by %>%
ggvis(x = ~Race , fill = ~AgeRange) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$AgeRange) %>%
add_axis("x", label = "plot")
stop_race
iris %>%
ggvis(x = ~Petal.Width) %>%
layer_points(y = ~Petal.Length, fill = ~Species) %>%
add_title(title = "Petal.Width vs. Petal.Length")
add_title <- function(vis, ..., properties=NULL, title = "Plot Title")
{
# recursively merge lists by name
# http://stackoverflow.com/a/13811666/1135316
merge.lists <- function(a, b) {
a.names <- names(a)
b.names <- names(b)
m.names <- sort(unique(c(a.names, b.names)))
sapply(m.names, function(i) {
if (is.list(a[[i]]) & is.list(b[[i]])) merge.lists(a[[i]], b[[i]])
else if (i %in% b.names) b[[i]]
else a[[i]]
}, simplify = FALSE)
}
# default properties make title 'axis' invisible
default.props <- axis_props(
ticks = list(strokeWidth=0),
axis = list(strokeWidth=0),
labels = list(fontSize = 0),
grid = list(strokeWidth=0)
)
# merge the default properties with user-supplied props.
axis.props <- do.call(axis_props, merge.lists(default.props, properties))
# don't step on existing scales.
vis <- scale_numeric(vis, "title", domain = c(0,1), range = 'width')
axis <- ggvis:::create_axis('x', 'title', orient = "top",  title = title, properties = axis.props, ...)
ggvis:::append_ggvis(vis, "axes", axis)
}
stop_race <- stop_by %>%
ggvis(x = ~Race , fill = ~AgeRange) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$AgeRange) %>%
add_title(title = "plot")
stop_race
ggvis:::create_axis()
help(create_axis)
help(ggvis:::create_axis)
help("add_axis")
mtcars %>% ggvis(x = ~wt, y = ~mpg, fill = ~cyl) %>%
layer_points() %>%
add_axis("x", title = "Weight", orient = "top"
)
create_axis
??create_axis
iris %>%
ggvis(x = ~Petal.Width) %>%
layer_points(y = ~Petal.Length, fill = ~Species) %>%
add_axis("x", title = "X-axis!!!!", title_offset=40,
properties = axis_props(title=list(fontSize=16),
labels = list(fontSize = 12))) %>%
add_title(title = "Petal.Width vs. Petal.Length")
scale_numeric()
help("scale_numeric")
add_title <- function(vis, ..., properties=NULL, title = "Plot Title") {
merge.lists <- function(a, b) {
a.names <- names(a)
b.names <- names(b)
m.names <- sort(unique(c(a.names, b.names)))
sapply(m.names, function(i) {
if (is.list(a[[i]]) & is.list(b[[i]])) merge.lists(a[[i]], b[[i]])
else if (i %in% b.names) b[[i]]
else a[[i]]
}, simplify = FALSE)
}
# default properties make title 'axis' invisible
default.props <- axis_props(
ticks = list(strokeWidth=0),
axis = list(strokeWidth=0),
labels = list(fontSize = 0),
grid = list(strokeWidth=0)
)
# merge the default properties with user-supplied props.
axis.props <- do.call(axis_props, merge.lists(default.props, properties))
# don't step on existing scales.
vis <- scale_numeric(vis, "title", domain = c(0,1), range = 'width')
axis <- ggvis:::create_axis('title', orient = "top",  title = title)
ggvis:::append_ggvis(vis, "axes", axis)
}
stop_race <- stop_by %>%
ggvis(x = ~Race , fill = ~AgeRange) %>%
layer_bars() %>%
add_tooltip(function(stop_by) stop_by$AgeRange) %>%
add_title(title = "count of personnel record different race")
stop_race
help("scale_numeric")
ggvis:::create_axis('title', title = "title", ...)
ggvis:::create_axis('title', title = "title")
axis <- ggvis:::create_axis('title', title = "title")
5454/14291
4636/14291
stop_day_total_table <- stop_by %>%
group_by(Day) %>%
summarise(totaLCount = n())
stop_day_race_table <- stop_by %>%
group_by(Day, Race) %>%
summarise(count = n())
stop_day_table <- left_join(stop_day_race_table, stop_day_total_table, by = "Day")
stop_day_table <- stop_race_table %>%
spread(key = Race, value = count)
stop_day_table
stop_day_total_table <- stop_by %>%
group_by(Day) %>%
summarise(totaLCount = n())
stop_day_race_table <- stop_by %>%
group_by(Day, Race) %>%
summarise(count = n())
stop_day_table <- left_join(stop_day_race_table, stop_day_total_table, by = "Day")
stop_day_table <- stop_day_table %>%
spread(key = Race, value = count)
stop_day_table
wday(now())
stop_time <- stop_by %>%
ggvis(x = ~Hour, fill := "lightpink") %>%
layer_histograms(width = input_slider(1, 12, value = 1, step = 2, label = "width"))
stop_time
stop_time
stop_hour <- stop_by %>%
group_by(Hour) %>%
summarise(count = n())
stop_hour
View(stop_hour)
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = Reason)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~Race)
stop_time_percentage
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = Race)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = ..count../sum(..count..))) +
labs(y = "Density") +
facet_wrap(~Race)
stop_time_percentage
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = ..count..)) +
labs(y = "Density") +
facet_wrap(~Race)
stop_time_percentage
stop_time_percentage <- ggplot(stop_by, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = ..count..)) +
labs(y = "Count") +
facet_wrap(~Race)
stop_time_percentage
stop_by_hourCount <- stop_by %>%
group_by(Hour) %>%
summarise(hourcount = n())
stop_by_ageRangeCount <- stop_by %>%
group_by(Hour, AgeRange) %>%
summarise(ageCount = n())
stop_by_percentage <- left_join(stop_by_ageRangeCount, stop_by_hourCount)
stop_by_percentage <- stop_by_percentage %>%
mutate(percentage = ageCount/hourcount)
stop_by_hourCount <- stop_by %>%
group_by(Hour) %>%
summarise(hourcount = n())
stop_by_ageRangeCount <- stop_by %>%
group_by(Hour, AgeRange) %>%
summarise(ageCount = n())
stop_by_percentage <- left_join(stop_by_ageRangeCount, stop_by_hourCount, by = "Hour")
stop_by_percentage <- stop_by_percentage %>%
mutate(percentage = ageCount/hourcount)
View(stop_by_percentage)
stop_time_percentage2 <- ggplot(stop_by_percentage, aes(x = Hour, fill = AgeRange)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~AgeRange)
stop_time_percentage2
stop_time_percentage3 <- ggplot(stop_by_percentage1, aes(x = Hour, fill = Race)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Race)
stop_time_percentage3
stop_by_hourCount <- stop_by %>%
group_by(Hour) %>%
summarise(hourcount = n())
stop_by_ageRangeCount <- stop_by %>%
group_by(Hour, AgeRange) %>%
summarise(ageCount = n())
stop_by_percentage <- left_join(stop_by_ageRangeCount, stop_by_hourCount, by = "Hour")
stop_by_percentage <- stop_by_percentage %>%
mutate(percentage = ageCount/hourcount)
View(stop_by_percentage1)
stop_by_reason_race <- stop_by %>%
group_by(Race, Reason) %>%
summarise(totalCount = n())
stop_by_arrest <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(Race, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_race <- left_join(stop_by_reason_race, stop_by_arrest)
stop_by_percentage_race <- stop_by_percentage_race %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest <- ggplot(stop_by_percentage_race, aes(x = Race, fill = Race)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest
stop_by_reason_race <- stop_by %>%
group_by(Race, Reason) %>%
summarise(totalCount = n())
stop_by_arrest <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(Race, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_race <- left_join(stop_by_reason_race, stop_by_arrest)
stop_by_percentage_race <- stop_by_percentage_race %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest <- ggplot(stop_by_percentage_race, aes(x = Race, fill = Race)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest
View(stop_by_arrest)
View(stop_by_percentage_race)
stop_by_percentage_race %>%
select(Race, Reason, percentage) %>%
gather(Reason, percentage)
stop_by_percentage_race %>%
select(Race, Reason, percentage) %>%
spread(Reason, percentage)
spreadTable <- stop_by_percentage_race %>%
+ select(Race, Reason, percentage) %>%
+ spread(Reason, percentage)
stop_by_reason_race <- stop_by %>%
group_by(Race, Reason) %>%
summarise(totalCount = n())
stop_by_arrest <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(Race, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_race <- left_join(stop_by_reason_race, stop_by_arrest)
stop_by_percentage_race <- stop_by_percentage_race %>%
mutate(percentage = arrestCount / totalCount)
spreadTable <- stop_by_percentage_race %>%
+ select(Race, Reason, percentage) %>%
+ spread(Reason, percentage)
spreadTable <- stop_by_percentage_race %>%
select(Race, Reason, percentage) %>%
spread(Reason, percentage)
spreadTable
mean(spreadTable$T)
mean(spreadTable$W)
stop_by_reason_age <- stop_by %>%
group_by(AgeRange, Reason) %>%
summarise(totalCount = n())
stop_by_arrest_age <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(AgeRange, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_age <- left_join(stop_by_reason_age, stop_by_arrest_age)
stop_by_percentage_age <- stop_by_percentage_age %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest_age <- ggplot(stop_by_percentage_age, aes(x = AgeRange, fill = AgeRange)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest_age
spreadTable <- stop_by_percentage_age %>%
+ select(Age, Reason, percentage) %>%
+ spread(Reason, percentage)
spreadTable <- stop_by_percentage_age %>%
+ select(AgeRange, Reason, percentage) %>%
+ spread(Reason, percentage)
stop_by_percentage_age
spreadTable <- stop_by_percentage_age %>%select(AgeRange, Reason, percentage) %>%
+ spread(Reason, percentage)
spreadTable <- stop_by_percentage_age %>%
select(AgeRange, Reason, percentage) %>%
spead(Reason, percentage)
spreadTable <- stop_by_percentage_age %>%
select(AgeRange, Reason, percentage) %>%
spread(Reason, percentage)
spreadTable
mean(spreadTable$T)
mean(spreadTable$W)
stop_by_reason_gender <- stop_by %>%
group_by(Gender, Reason) %>%
summarise(totalCount = n())
stop_by_arrest_gender <- stop_by %>%
filter(Enforcement == "A") %>%
group_by(Gender, Reason) %>%
summarise(arrestCount = n())
stop_by_percentage_gender <- left_join(stop_by_reason_gender, stop_by_arrest_gender)
stop_by_percentage_gender <- stop_by_percentage_gender %>%
mutate(percentage = arrestCount / totalCount)
stop_arrest_gender <- ggplot(stop_by_percentage_gender, aes(x = Gender, fill = Gender)) +
geom_bar(aes(y = percentage), stat="identity") +
labs(y = "Density") +
facet_wrap(~Reason)
stop_arrest_gender
spreadTable <- stop_by_percentage_gender %>%
select(Gender, Reason, percentage) %>%
spead(Reason, percentage)
spreadTable <- stop_by_percentage_gender %>%
select(Gender, Reason, percentage) %>%
spread(Reason, percentage)
View(spreadTable)
spreadTable
mean(spreadTable$T)
